model = Sequential()
model.add(Dense(input_dim=100,output_dim=1024))
model.add(Activation('tanh'))
model.add(Dense(128*7*7))
model.add(BatchNormalization())
model.add(Activation('tanh'))
model.add(Reshape((128,7,7)))
model.add(UpSampling2D(size=(2,2)))
model.add(Convolution2D(64,5,5,border_mode='same'))
model.add(Activation('tanh'))
model.add(UpSampling2D(size=(2,2)))
model.add(Convolution2D(1,5,5,border_mode='same'))
model.add(Activation('tanh'))


generator = Sequential()
generator.add(Dense(input_dim=100,output_dim=1024,init='glorot_normal'))
generator.add(BatchNormalization())
generator.add(LeakyReLU(alpha=0.1))
generator.add(Dense(128*7*7))
generator.add(BatchNormalization())
generator.add(LeakyReLU(alpha=0.1))
generator.add(Reshape((128,7,7)))
generator.add(UpSampling2D(size=(2,2)))
generator.add(Convolution2D(64,5,5,border_mode='same',init='glorot_uniform'))
generator.add(LeakyReLU(alpha=0.1))
generator.add(UpSampling2D(size=(2,2)))
generator.add(Convolution2D(32,3,3,border_mode='same',init='glorot_uniform'))
generator.add(LeakyReLU(alpha=0.1))
generator.add(Convolution2D(1,1,1,border_mode='same',init='glorot_uniform'))
generator.add(Activation('sigmoid'))
generator.summary()



#print X_train.shape,y_train.shape
y_train[:] = 1
y = np.zeros((70000))
y[0:60000] = y_train[:]
y = y.astype(int)
print y[65000]
x = np.zeros((70000,28,28))
x[0:60000,:,:] = X_train
y = np_utils.to_categorical(y,2)
for i in range(60000,70000):
	x[i,:,:] = misc.imread("/home/vignesh/Desktop/GAN/generatedimages/" + str(i-60000) + ".png")
